name: CI

on:
  workflow_call:
    inputs:
      overlay_cache_key:
        required: false
        type: string
        default: ""
      version_extension:
        required: false
        type: string
        default: ""
  ## Disable CI in this public repo until after a self-hosted runner can be setup safely
  # pull_request:
  #   branches: [main]

env:
  workdir: _workdir

jobs:
  build_fake_builds:
    name: Build Fake L4T Images
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # checkout all git history

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker buildx for multi-arch builds
        uses: docker/setup-buildx-action@v2

      # install required tools into host
      - name: Install required tools into host
        run: |
          sudo apt-get update && sudo apt-get install -y \
          pbzip2

      # Steps for processing a worflow caller (i.e. overlayed software)
      - name: Download Overlay Cache
        id: download_overlay_cache
        if: inputs.overlay_cache_key != null
        uses: actions/cache@v3
        with:
          path: ${{ env.workdir }}
          key: ${{ inputs.overlay_cache_key }}

      - name: Set the Cache Working Directory
        id: cache_dir
        run: |
          if [ ${{ steps.download_overlay_cache.outcome }} == 'skipped' ]; then
            echo "Cache step skipped, use current repo as working directory"
            echo ::set-output name=workdir::.
          else
            if [ ${{ steps.download_overlay_cache.outputs.cache-hit }} == 'true' ]; then
              echo "Overlay cache found, use cache [$workdir] as working directory"
              echo ::set-output name=workdir::$workdir
            else
              echo "Overlay cache expected but not found. Exit"
              exit 1
            fi
          fi

      # Run the unit test on the working directory
      - name: Run unit-test
        working-directory: ${{ steps.cache_dir.outputs.workdir }}
        run: |
          if [ ${{ inputs.version_extension }} != null ]; then
            ./unit-tests/unit-test.sh -e ${{ inputs.version_extension }}
          else
            ./unit-tests/unit-test.sh
          fi
